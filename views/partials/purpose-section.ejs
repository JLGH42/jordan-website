<section id="purpose-section">
  <h1 class="fade-in">why i want to join the program</h1>
  <div class="vert-cards grid-container">
    <article class="vert-card fade-in">
      <i class="fa fa-solid fa-network-wired"></i>
      <h3>structure</h3>
      <p>
        Being self-taught is fun because you tend to focus on the things that
        “just work”, I sometimes overlook the underlying reasons for why
        something works which tends to become a bump in the road later on down
        the line (immutability in React -.-). <br><br> With structured learning, these
        overlooked aspects of programming are factored in, in some cases, I'm
        not fully aware of these topics which results in longer debugging
        sessions and having to research the internet for the answer to my
        dilemma(s). Having a structured curriculum/working on real issues also
        creates a stronger sense of urgency as there are set deadlines that have
        an impact. In contrast, being self-taught, you can offset certain tasks
        you have extreme difficulty with, with more manageable tasks.
      </p>
    </article>
    <article class="vert-card fade-in">
      <i class="fa fa-solid fa-people-group"></i>
      <h3>learn, experience, earn</h3>
      <p>
        Working another job and studying at the same time can be exhausting both
        mentally and physically - with an apprenticeship, I get the best of both
        worlds with a focus on practical application for a real company.
        <br /><br />
        Learning as mentioned before is more structured which points you in the
        right direction, applying what you've learned to real-world applications
        makes the experience feel much more tangible, you're no longer a
        chicken, you're now a pig who has to commit yourself to ensure the best
        possible outcomes for the company you work for. Earning enhances this
        tangible feeling because it puts value on the work you produce, it feels
        much better than pretending to fix a real-world issue. <br /><br />
        This, in my opinion, is the best way to get recognised too: offering a
        network; being awarded a certificate upon completion; 1 to 1's with
        those who have more experience than you is always a plus.
      </p>
    </article>
    <article class="vert-card fade-in">
      <i class="fa-solid fa-hand-spock"></i>
      <h3>future</h3>
      <p>
        My aspirations as a developer are to help build the world of tomorrow,
        whether it's improving the visual appetite of the average user or
        inventing/integrating something as grand as improving the accessibility
        of technology/software for people around the world, I want to use my
        skills and intuition to improve the state of world - the next generation
        and my own. I believe getting into the Software Foundation (and
        eventually an apprenticeship) is the stepping stone to my dream of
        becoming a part of the new world of technology with its accelerated
        growth. <br /><br />As a Web Developer I will be handling a big part of
        the media which comes with a level of responsibility to ensure the
        highest standards of visual interfaces and user experiences, I believe I
        will gain this from joining Founder and Coders.
      </p>
    </article>
  </div>
</section>
